// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"Collections::CollectionsPackageTests::ProductTarget" /* CollectionsPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_227 /* Build configuration list for PBXAggregateTarget "CollectionsPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_230 /* PBXTargetDependency */,
			);
			name = CollectionsPackageTests;
			productName = CollectionsPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_115 /* AnySequenceWrappingTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_58 /* AnySequenceWrappingTests.swift */; };
		OBJ_116 /* CircularArrayTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_59 /* CircularArrayTests.swift */; };
		OBJ_117 /* CollectionsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_60 /* CollectionsTests.swift */; };
		OBJ_118 /* CombinationsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_61 /* CombinationsTests.swift */; };
		OBJ_119 /* ComparisonTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_62 /* ComparisonTests.swift */; };
		OBJ_120 /* DictionaryTypeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_63 /* DictionaryTypeTests.swift */; };
		OBJ_121 /* ElementsAtIndicesTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_64 /* ElementsAtIndicesTests.swift */; };
		OBJ_122 /* EnumComparableTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_65 /* EnumComparableTests.swift */; };
		OBJ_123 /* EnumEquatableTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_66 /* EnumEquatableTests.swift */; };
		OBJ_124 /* EnumIterationTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_67 /* EnumIterationTests.swift */; };
		OBJ_125 /* KeyPathTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_68 /* KeyPathTests.swift */; };
		OBJ_126 /* LinkedListTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_69 /* LinkedListTests.swift */; };
		OBJ_127 /* ListProcessingTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_70 /* ListProcessingTests.swift */; };
		OBJ_128 /* MatrixTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_71 /* MatrixTests.swift */; };
		OBJ_129 /* MutableTreeProtocolTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_72 /* MutableTreeProtocolTests.swift */; };
		OBJ_130 /* MutableTreeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_73 /* MutableTreeTests.swift */; };
		OBJ_131 /* OrderedDictionaryTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_74 /* OrderedDictionaryTests.swift */; };
		OBJ_132 /* PairsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_75 /* PairsTests.swift */; };
		OBJ_133 /* RemoveElementsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_76 /* RemoveElementsTests.swift */; };
		OBJ_134 /* ReplaceElementsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_77 /* ReplaceElementsTests.swift */; };
		OBJ_135 /* SequenceAlgebraTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_78 /* SequenceAlgebraTests.swift */; };
		OBJ_136 /* SequenceExtensionsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_79 /* SequenceExtensionsTests.swift */; };
		OBJ_137 /* SortedArrayTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_80 /* SortedArrayTests.swift */; };
		OBJ_138 /* SortedDictionaryTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_81 /* SortedDictionaryTests.swift */; };
		OBJ_139 /* SplitTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_82 /* SplitTests.swift */; };
		OBJ_140 /* StableSortTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_83 /* StableSortTests.swift */; };
		OBJ_141 /* StackTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_84 /* StackTests.swift */; };
		OBJ_142 /* StringExtensionsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_85 /* StringExtensionsTests.swift */; };
		OBJ_143 /* SubsetsTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_86 /* SubsetsTests.swift */; };
		OBJ_144 /* SwapTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_87 /* SwapTests.swift */; };
		OBJ_145 /* TreeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_88 /* TreeTests.swift */; };
		OBJ_146 /* TupleMapTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_89 /* TupleMapTests.swift */; };
		OBJ_147 /* Zip3SequenceTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_90 /* Zip3SequenceTests.swift */; };
		OBJ_148 /* ZipperTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_91 /* ZipperTests.swift */; };
		OBJ_150 /* Collections.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Collections::Collections::Product" /* Collections.framework */; };
		OBJ_151 /* Algebra.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Algebra::Algebra::Product" /* Algebra.framework */; };
		OBJ_160 /* ArrayError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* ArrayError.swift */; };
		OBJ_161 /* ArrayExtensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* ArrayExtensions.swift */; };
		OBJ_162 /* CircularArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* CircularArray.swift */; };
		OBJ_163 /* CollectionWrapping.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* CollectionWrapping.swift */; };
		OBJ_164 /* Combinations.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* Combinations.swift */; };
		OBJ_165 /* Comparison.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Comparison.swift */; };
		OBJ_166 /* DictionaryProtocol.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* DictionaryProtocol.swift */; };
		OBJ_167 /* Either.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Either.swift */; };
		OBJ_168 /* ElementsAtIndices.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* ElementsAtIndices.swift */; };
		OBJ_169 /* KeyPath.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* KeyPath.swift */; };
		OBJ_170 /* LinkedList.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* LinkedList.swift */; };
		OBJ_171 /* ListProcessing.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* ListProcessing.swift */; };
		OBJ_172 /* Matrix.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* Matrix.swift */; };
		OBJ_173 /* MutableGraph+AdjacencyList.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* MutableGraph+AdjacencyList.swift */; };
		OBJ_174 /* MutableGraph+Edge.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* MutableGraph+Edge.swift */; };
		OBJ_175 /* MutableGraph+EdgeList.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* MutableGraph+EdgeList.swift */; };
		OBJ_176 /* MutableGraph+Node.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* MutableGraph+Node.swift */; };
		OBJ_177 /* MutableGraph.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* MutableGraph.swift */; };
		OBJ_178 /* MutableGraphTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* MutableGraphTests.swift */; };
		OBJ_179 /* MutableTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* MutableTree.swift */; };
		OBJ_180 /* MutableTreeProtocol.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* MutableTreeProtocol.swift */; };
		OBJ_181 /* OrderedDictionary.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* OrderedDictionary.swift */; };
		OBJ_182 /* Pairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* Pairs.swift */; };
		OBJ_183 /* RandomAccessCollectionWrapping.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* RandomAccessCollectionWrapping.swift */; };
		OBJ_184 /* RawRepresentable+AllCases.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* RawRepresentable+AllCases.swift */; };
		OBJ_185 /* RawRepresentable+Comparable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* RawRepresentable+Comparable.swift */; };
		OBJ_186 /* RawRepresentable+Equatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* RawRepresentable+Equatable.swift */; };
		OBJ_187 /* RemoveElements.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* RemoveElements.swift */; };
		OBJ_188 /* ReplaceElements.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* ReplaceElements.swift */; };
		OBJ_189 /* Sequence+Algebra.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* Sequence+Algebra.swift */; };
		OBJ_190 /* SequenceExtensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_39 /* SequenceExtensions.swift */; };
		OBJ_191 /* SequenceWrapping.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* SequenceWrapping.swift */; };
		OBJ_192 /* Set+Algebra.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* Set+Algebra.swift */; };
		OBJ_193 /* SingleTypedTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* SingleTypedTree.swift */; };
		OBJ_194 /* SortedArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* SortedArray.swift */; };
		OBJ_195 /* SortedCollectionWrapping.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_44 /* SortedCollectionWrapping.swift */; };
		OBJ_196 /* SortedDictionary.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_45 /* SortedDictionary.swift */; };
		OBJ_197 /* Split.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_46 /* Split.swift */; };
		OBJ_198 /* StableSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_47 /* StableSort.swift */; };
		OBJ_199 /* Stack.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_48 /* Stack.swift */; };
		OBJ_200 /* StringExtensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_49 /* StringExtensions.swift */; };
		OBJ_201 /* Subsets.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_50 /* Subsets.swift */; };
		OBJ_202 /* Swap.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_51 /* Swap.swift */; };
		OBJ_203 /* Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_52 /* Tree.swift */; };
		OBJ_204 /* TupleMap.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_53 /* TupleMap.swift */; };
		OBJ_205 /* Zip3Sequence.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_54 /* Zip3Sequence.swift */; };
		OBJ_206 /* Zipper.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_55 /* Zipper.swift */; };
		OBJ_208 /* Algebra.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Algebra::Algebra::Product" /* Algebra.framework */; };
		OBJ_214 /* Additive.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_95 /* Additive.swift */; };
		OBJ_215 /* AdditiveSemigroup.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_96 /* AdditiveSemigroup.swift */; };
		OBJ_216 /* Monoid.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_97 /* Monoid.swift */; };
		OBJ_217 /* MonoidView.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_98 /* MonoidView.swift */; };
		OBJ_218 /* Multiplicative.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_99 /* Multiplicative.swift */; };
		OBJ_219 /* MultiplicativeSemigroup.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_100 /* MultiplicativeSemigroup.swift */; };
		OBJ_220 /* One.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_101 /* One.swift */; };
		OBJ_221 /* Product.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_102 /* Product.swift */; };
		OBJ_222 /* Semigroup.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_103 /* Semigroup.swift */; };
		OBJ_223 /* Sum.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_104 /* Sum.swift */; };
		OBJ_224 /* Zero.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_105 /* Zero.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		076E04E31F26A92800725508 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Algebra::Algebra";
			remoteInfo = Algebra;
		};
		076E04E41F26A92800725508 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Collections::Collections";
			remoteInfo = Collections;
		};
		076E04E51F26A92800725508 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Algebra::Algebra";
			remoteInfo = Algebra;
		};
		076E04E61F26A92900725508 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Collections::CollectionsTests";
			remoteInfo = CollectionsTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"Algebra::Algebra::Product" /* Algebra.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Algebra.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Collections::Collections::Product" /* Collections.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Collections.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Collections::CollectionsTests::Product" /* CollectionsTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = CollectionsTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* ArrayExtensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArrayExtensions.swift; sourceTree = "<group>"; };
		OBJ_100 /* MultiplicativeSemigroup.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MultiplicativeSemigroup.swift; sourceTree = "<group>"; };
		OBJ_101 /* One.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = One.swift; sourceTree = "<group>"; };
		OBJ_102 /* Product.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Product.swift; sourceTree = "<group>"; };
		OBJ_103 /* Semigroup.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Semigroup.swift; sourceTree = "<group>"; };
		OBJ_104 /* Sum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Sum.swift; sourceTree = "<group>"; };
		OBJ_105 /* Zero.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Zero.swift; sourceTree = "<group>"; };
		OBJ_11 /* CircularArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CircularArray.swift; sourceTree = "<group>"; };
		OBJ_12 /* CollectionWrapping.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CollectionWrapping.swift; sourceTree = "<group>"; };
		OBJ_13 /* Combinations.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Combinations.swift; sourceTree = "<group>"; };
		OBJ_14 /* Comparison.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Comparison.swift; sourceTree = "<group>"; };
		OBJ_15 /* DictionaryProtocol.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DictionaryProtocol.swift; sourceTree = "<group>"; };
		OBJ_16 /* Either.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Either.swift; sourceTree = "<group>"; };
		OBJ_17 /* ElementsAtIndices.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ElementsAtIndices.swift; sourceTree = "<group>"; };
		OBJ_18 /* KeyPath.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyPath.swift; sourceTree = "<group>"; };
		OBJ_19 /* LinkedList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LinkedList.swift; sourceTree = "<group>"; };
		OBJ_20 /* ListProcessing.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListProcessing.swift; sourceTree = "<group>"; };
		OBJ_21 /* Matrix.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Matrix.swift; sourceTree = "<group>"; };
		OBJ_22 /* MutableGraph+AdjacencyList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MutableGraph+AdjacencyList.swift"; sourceTree = "<group>"; };
		OBJ_23 /* MutableGraph+Edge.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MutableGraph+Edge.swift"; sourceTree = "<group>"; };
		OBJ_24 /* MutableGraph+EdgeList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MutableGraph+EdgeList.swift"; sourceTree = "<group>"; };
		OBJ_25 /* MutableGraph+Node.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "MutableGraph+Node.swift"; sourceTree = "<group>"; };
		OBJ_26 /* MutableGraph.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MutableGraph.swift; sourceTree = "<group>"; };
		OBJ_27 /* MutableGraphTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MutableGraphTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* MutableTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MutableTree.swift; sourceTree = "<group>"; };
		OBJ_29 /* MutableTreeProtocol.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MutableTreeProtocol.swift; sourceTree = "<group>"; };
		OBJ_30 /* OrderedDictionary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OrderedDictionary.swift; sourceTree = "<group>"; };
		OBJ_31 /* Pairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Pairs.swift; sourceTree = "<group>"; };
		OBJ_32 /* RandomAccessCollectionWrapping.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RandomAccessCollectionWrapping.swift; sourceTree = "<group>"; };
		OBJ_33 /* RawRepresentable+AllCases.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "RawRepresentable+AllCases.swift"; sourceTree = "<group>"; };
		OBJ_34 /* RawRepresentable+Comparable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "RawRepresentable+Comparable.swift"; sourceTree = "<group>"; };
		OBJ_35 /* RawRepresentable+Equatable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "RawRepresentable+Equatable.swift"; sourceTree = "<group>"; };
		OBJ_36 /* RemoveElements.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RemoveElements.swift; sourceTree = "<group>"; };
		OBJ_37 /* ReplaceElements.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReplaceElements.swift; sourceTree = "<group>"; };
		OBJ_38 /* Sequence+Algebra.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Sequence+Algebra.swift"; sourceTree = "<group>"; };
		OBJ_39 /* SequenceExtensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SequenceExtensions.swift; sourceTree = "<group>"; };
		OBJ_40 /* SequenceWrapping.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SequenceWrapping.swift; sourceTree = "<group>"; };
		OBJ_41 /* Set+Algebra.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Set+Algebra.swift"; sourceTree = "<group>"; };
		OBJ_42 /* SingleTypedTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SingleTypedTree.swift; sourceTree = "<group>"; };
		OBJ_43 /* SortedArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SortedArray.swift; sourceTree = "<group>"; };
		OBJ_44 /* SortedCollectionWrapping.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SortedCollectionWrapping.swift; sourceTree = "<group>"; };
		OBJ_45 /* SortedDictionary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SortedDictionary.swift; sourceTree = "<group>"; };
		OBJ_46 /* Split.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Split.swift; sourceTree = "<group>"; };
		OBJ_47 /* StableSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StableSort.swift; sourceTree = "<group>"; };
		OBJ_48 /* Stack.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Stack.swift; sourceTree = "<group>"; };
		OBJ_49 /* StringExtensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StringExtensions.swift; sourceTree = "<group>"; };
		OBJ_50 /* Subsets.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Subsets.swift; sourceTree = "<group>"; };
		OBJ_51 /* Swap.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Swap.swift; sourceTree = "<group>"; };
		OBJ_52 /* Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Tree.swift; sourceTree = "<group>"; };
		OBJ_53 /* TupleMap.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TupleMap.swift; sourceTree = "<group>"; };
		OBJ_54 /* Zip3Sequence.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Zip3Sequence.swift; sourceTree = "<group>"; };
		OBJ_55 /* Zipper.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Zipper.swift; sourceTree = "<group>"; };
		OBJ_58 /* AnySequenceWrappingTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AnySequenceWrappingTests.swift; sourceTree = "<group>"; };
		OBJ_59 /* CircularArrayTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CircularArrayTests.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* CollectionsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CollectionsTests.swift; sourceTree = "<group>"; };
		OBJ_61 /* CombinationsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CombinationsTests.swift; sourceTree = "<group>"; };
		OBJ_62 /* ComparisonTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ComparisonTests.swift; sourceTree = "<group>"; };
		OBJ_63 /* DictionaryTypeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DictionaryTypeTests.swift; sourceTree = "<group>"; };
		OBJ_64 /* ElementsAtIndicesTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ElementsAtIndicesTests.swift; sourceTree = "<group>"; };
		OBJ_65 /* EnumComparableTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EnumComparableTests.swift; sourceTree = "<group>"; };
		OBJ_66 /* EnumEquatableTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EnumEquatableTests.swift; sourceTree = "<group>"; };
		OBJ_67 /* EnumIterationTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EnumIterationTests.swift; sourceTree = "<group>"; };
		OBJ_68 /* KeyPathTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyPathTests.swift; sourceTree = "<group>"; };
		OBJ_69 /* LinkedListTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LinkedListTests.swift; sourceTree = "<group>"; };
		OBJ_70 /* ListProcessingTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListProcessingTests.swift; sourceTree = "<group>"; };
		OBJ_71 /* MatrixTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatrixTests.swift; sourceTree = "<group>"; };
		OBJ_72 /* MutableTreeProtocolTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MutableTreeProtocolTests.swift; sourceTree = "<group>"; };
		OBJ_73 /* MutableTreeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MutableTreeTests.swift; sourceTree = "<group>"; };
		OBJ_74 /* OrderedDictionaryTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OrderedDictionaryTests.swift; sourceTree = "<group>"; };
		OBJ_75 /* PairsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PairsTests.swift; sourceTree = "<group>"; };
		OBJ_76 /* RemoveElementsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RemoveElementsTests.swift; sourceTree = "<group>"; };
		OBJ_77 /* ReplaceElementsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReplaceElementsTests.swift; sourceTree = "<group>"; };
		OBJ_78 /* SequenceAlgebraTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SequenceAlgebraTests.swift; sourceTree = "<group>"; };
		OBJ_79 /* SequenceExtensionsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SequenceExtensionsTests.swift; sourceTree = "<group>"; };
		OBJ_80 /* SortedArrayTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SortedArrayTests.swift; sourceTree = "<group>"; };
		OBJ_81 /* SortedDictionaryTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SortedDictionaryTests.swift; sourceTree = "<group>"; };
		OBJ_82 /* SplitTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SplitTests.swift; sourceTree = "<group>"; };
		OBJ_83 /* StableSortTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StableSortTests.swift; sourceTree = "<group>"; };
		OBJ_84 /* StackTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StackTests.swift; sourceTree = "<group>"; };
		OBJ_85 /* StringExtensionsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StringExtensionsTests.swift; sourceTree = "<group>"; };
		OBJ_86 /* SubsetsTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SubsetsTests.swift; sourceTree = "<group>"; };
		OBJ_87 /* SwapTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SwapTests.swift; sourceTree = "<group>"; };
		OBJ_88 /* TreeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TreeTests.swift; sourceTree = "<group>"; };
		OBJ_89 /* TupleMapTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TupleMapTests.swift; sourceTree = "<group>"; };
		OBJ_9 /* ArrayError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArrayError.swift; sourceTree = "<group>"; };
		OBJ_90 /* Zip3SequenceTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Zip3SequenceTests.swift; sourceTree = "<group>"; };
		OBJ_91 /* ZipperTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZipperTests.swift; sourceTree = "<group>"; };
		OBJ_95 /* Additive.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Additive.swift; sourceTree = "<group>"; };
		OBJ_96 /* AdditiveSemigroup.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AdditiveSemigroup.swift; sourceTree = "<group>"; };
		OBJ_97 /* Monoid.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Monoid.swift; sourceTree = "<group>"; };
		OBJ_98 /* MonoidView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonoidView.swift; sourceTree = "<group>"; };
		OBJ_99 /* Multiplicative.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Multiplicative.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_149 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_150 /* Collections.framework in Frameworks */,
				OBJ_151 /* Algebra.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_207 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_208 /* Algebra.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_225 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_106 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Collections::CollectionsTests::Product" /* CollectionsTests.xctest */,
				"Collections::Collections::Product" /* Collections.framework */,
				"Algebra::Algebra::Product" /* Algebra.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_56 /* Tests */,
				OBJ_92 /* Dependencies */,
				OBJ_106 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_56 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_57 /* CollectionsTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_57 /* CollectionsTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_58 /* AnySequenceWrappingTests.swift */,
				OBJ_59 /* CircularArrayTests.swift */,
				OBJ_60 /* CollectionsTests.swift */,
				OBJ_61 /* CombinationsTests.swift */,
				OBJ_62 /* ComparisonTests.swift */,
				OBJ_63 /* DictionaryTypeTests.swift */,
				OBJ_64 /* ElementsAtIndicesTests.swift */,
				OBJ_65 /* EnumComparableTests.swift */,
				OBJ_66 /* EnumEquatableTests.swift */,
				OBJ_67 /* EnumIterationTests.swift */,
				OBJ_68 /* KeyPathTests.swift */,
				OBJ_69 /* LinkedListTests.swift */,
				OBJ_70 /* ListProcessingTests.swift */,
				OBJ_71 /* MatrixTests.swift */,
				OBJ_72 /* MutableTreeProtocolTests.swift */,
				OBJ_73 /* MutableTreeTests.swift */,
				OBJ_74 /* OrderedDictionaryTests.swift */,
				OBJ_75 /* PairsTests.swift */,
				OBJ_76 /* RemoveElementsTests.swift */,
				OBJ_77 /* ReplaceElementsTests.swift */,
				OBJ_78 /* SequenceAlgebraTests.swift */,
				OBJ_79 /* SequenceExtensionsTests.swift */,
				OBJ_80 /* SortedArrayTests.swift */,
				OBJ_81 /* SortedDictionaryTests.swift */,
				OBJ_82 /* SplitTests.swift */,
				OBJ_83 /* StableSortTests.swift */,
				OBJ_84 /* StackTests.swift */,
				OBJ_85 /* StringExtensionsTests.swift */,
				OBJ_86 /* SubsetsTests.swift */,
				OBJ_87 /* SwapTests.swift */,
				OBJ_88 /* TreeTests.swift */,
				OBJ_89 /* TupleMapTests.swift */,
				OBJ_90 /* Zip3SequenceTests.swift */,
				OBJ_91 /* ZipperTests.swift */,
			);
			name = CollectionsTests;
			path = Tests/CollectionsTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Collections */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* Collections */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* ArrayError.swift */,
				OBJ_10 /* ArrayExtensions.swift */,
				OBJ_11 /* CircularArray.swift */,
				OBJ_12 /* CollectionWrapping.swift */,
				OBJ_13 /* Combinations.swift */,
				OBJ_14 /* Comparison.swift */,
				OBJ_15 /* DictionaryProtocol.swift */,
				OBJ_16 /* Either.swift */,
				OBJ_17 /* ElementsAtIndices.swift */,
				OBJ_18 /* KeyPath.swift */,
				OBJ_19 /* LinkedList.swift */,
				OBJ_20 /* ListProcessing.swift */,
				OBJ_21 /* Matrix.swift */,
				OBJ_22 /* MutableGraph+AdjacencyList.swift */,
				OBJ_23 /* MutableGraph+Edge.swift */,
				OBJ_24 /* MutableGraph+EdgeList.swift */,
				OBJ_25 /* MutableGraph+Node.swift */,
				OBJ_26 /* MutableGraph.swift */,
				OBJ_27 /* MutableGraphTests.swift */,
				OBJ_28 /* MutableTree.swift */,
				OBJ_29 /* MutableTreeProtocol.swift */,
				OBJ_30 /* OrderedDictionary.swift */,
				OBJ_31 /* Pairs.swift */,
				OBJ_32 /* RandomAccessCollectionWrapping.swift */,
				OBJ_33 /* RawRepresentable+AllCases.swift */,
				OBJ_34 /* RawRepresentable+Comparable.swift */,
				OBJ_35 /* RawRepresentable+Equatable.swift */,
				OBJ_36 /* RemoveElements.swift */,
				OBJ_37 /* ReplaceElements.swift */,
				OBJ_38 /* Sequence+Algebra.swift */,
				OBJ_39 /* SequenceExtensions.swift */,
				OBJ_40 /* SequenceWrapping.swift */,
				OBJ_41 /* Set+Algebra.swift */,
				OBJ_42 /* SingleTypedTree.swift */,
				OBJ_43 /* SortedArray.swift */,
				OBJ_44 /* SortedCollectionWrapping.swift */,
				OBJ_45 /* SortedDictionary.swift */,
				OBJ_46 /* Split.swift */,
				OBJ_47 /* StableSort.swift */,
				OBJ_48 /* Stack.swift */,
				OBJ_49 /* StringExtensions.swift */,
				OBJ_50 /* Subsets.swift */,
				OBJ_51 /* Swap.swift */,
				OBJ_52 /* Tree.swift */,
				OBJ_53 /* TupleMap.swift */,
				OBJ_54 /* Zip3Sequence.swift */,
				OBJ_55 /* Zipper.swift */,
			);
			name = Collections;
			path = Sources/Collections;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_92 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_93 /* Algebra */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_93 /* Algebra */ = {
			isa = PBXGroup;
			children = (
				OBJ_94 /* Algebra */,
			);
			name = Algebra;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_94 /* Algebra */ = {
			isa = PBXGroup;
			children = (
				OBJ_95 /* Additive.swift */,
				OBJ_96 /* AdditiveSemigroup.swift */,
				OBJ_97 /* Monoid.swift */,
				OBJ_98 /* MonoidView.swift */,
				OBJ_99 /* Multiplicative.swift */,
				OBJ_100 /* MultiplicativeSemigroup.swift */,
				OBJ_101 /* One.swift */,
				OBJ_102 /* Product.swift */,
				OBJ_103 /* Semigroup.swift */,
				OBJ_104 /* Sum.swift */,
				OBJ_105 /* Zero.swift */,
			);
			name = Algebra;
			path = ".build/checkouts/Algebra--3273037139595469453/Sources/Algebra";
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Algebra::Algebra" /* Algebra */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_210 /* Build configuration list for PBXNativeTarget "Algebra" */;
			buildPhases = (
				OBJ_213 /* Sources */,
				OBJ_225 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Algebra;
			productName = Algebra;
			productReference = "Algebra::Algebra::Product" /* Algebra.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Collections::Collections" /* Collections */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_156 /* Build configuration list for PBXNativeTarget "Collections" */;
			buildPhases = (
				OBJ_159 /* Sources */,
				OBJ_207 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_209 /* PBXTargetDependency */,
			);
			name = Collections;
			productName = Collections;
			productReference = "Collections::Collections::Product" /* Collections.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Collections::CollectionsTests" /* CollectionsTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_111 /* Build configuration list for PBXNativeTarget "CollectionsTests" */;
			buildPhases = (
				OBJ_114 /* Sources */,
				OBJ_149 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_152 /* PBXTargetDependency */,
				OBJ_154 /* PBXTargetDependency */,
			);
			name = CollectionsTests;
			productName = CollectionsTests;
			productReference = "Collections::CollectionsTests::Product" /* CollectionsTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Collections" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_106 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Collections::CollectionsTests" /* CollectionsTests */,
				"Collections::Collections" /* Collections */,
				"Algebra::Algebra" /* Algebra */,
				"Collections::CollectionsPackageTests::ProductTarget" /* CollectionsPackageTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_114 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_115 /* AnySequenceWrappingTests.swift in Sources */,
				OBJ_116 /* CircularArrayTests.swift in Sources */,
				OBJ_117 /* CollectionsTests.swift in Sources */,
				OBJ_118 /* CombinationsTests.swift in Sources */,
				OBJ_119 /* ComparisonTests.swift in Sources */,
				OBJ_120 /* DictionaryTypeTests.swift in Sources */,
				OBJ_121 /* ElementsAtIndicesTests.swift in Sources */,
				OBJ_122 /* EnumComparableTests.swift in Sources */,
				OBJ_123 /* EnumEquatableTests.swift in Sources */,
				OBJ_124 /* EnumIterationTests.swift in Sources */,
				OBJ_125 /* KeyPathTests.swift in Sources */,
				OBJ_126 /* LinkedListTests.swift in Sources */,
				OBJ_127 /* ListProcessingTests.swift in Sources */,
				OBJ_128 /* MatrixTests.swift in Sources */,
				OBJ_129 /* MutableTreeProtocolTests.swift in Sources */,
				OBJ_130 /* MutableTreeTests.swift in Sources */,
				OBJ_131 /* OrderedDictionaryTests.swift in Sources */,
				OBJ_132 /* PairsTests.swift in Sources */,
				OBJ_133 /* RemoveElementsTests.swift in Sources */,
				OBJ_134 /* ReplaceElementsTests.swift in Sources */,
				OBJ_135 /* SequenceAlgebraTests.swift in Sources */,
				OBJ_136 /* SequenceExtensionsTests.swift in Sources */,
				OBJ_137 /* SortedArrayTests.swift in Sources */,
				OBJ_138 /* SortedDictionaryTests.swift in Sources */,
				OBJ_139 /* SplitTests.swift in Sources */,
				OBJ_140 /* StableSortTests.swift in Sources */,
				OBJ_141 /* StackTests.swift in Sources */,
				OBJ_142 /* StringExtensionsTests.swift in Sources */,
				OBJ_143 /* SubsetsTests.swift in Sources */,
				OBJ_144 /* SwapTests.swift in Sources */,
				OBJ_145 /* TreeTests.swift in Sources */,
				OBJ_146 /* TupleMapTests.swift in Sources */,
				OBJ_147 /* Zip3SequenceTests.swift in Sources */,
				OBJ_148 /* ZipperTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_159 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_160 /* ArrayError.swift in Sources */,
				OBJ_161 /* ArrayExtensions.swift in Sources */,
				OBJ_162 /* CircularArray.swift in Sources */,
				OBJ_163 /* CollectionWrapping.swift in Sources */,
				OBJ_164 /* Combinations.swift in Sources */,
				OBJ_165 /* Comparison.swift in Sources */,
				OBJ_166 /* DictionaryProtocol.swift in Sources */,
				OBJ_167 /* Either.swift in Sources */,
				OBJ_168 /* ElementsAtIndices.swift in Sources */,
				OBJ_169 /* KeyPath.swift in Sources */,
				OBJ_170 /* LinkedList.swift in Sources */,
				OBJ_171 /* ListProcessing.swift in Sources */,
				OBJ_172 /* Matrix.swift in Sources */,
				OBJ_173 /* MutableGraph+AdjacencyList.swift in Sources */,
				OBJ_174 /* MutableGraph+Edge.swift in Sources */,
				OBJ_175 /* MutableGraph+EdgeList.swift in Sources */,
				OBJ_176 /* MutableGraph+Node.swift in Sources */,
				OBJ_177 /* MutableGraph.swift in Sources */,
				OBJ_178 /* MutableGraphTests.swift in Sources */,
				OBJ_179 /* MutableTree.swift in Sources */,
				OBJ_180 /* MutableTreeProtocol.swift in Sources */,
				OBJ_181 /* OrderedDictionary.swift in Sources */,
				OBJ_182 /* Pairs.swift in Sources */,
				OBJ_183 /* RandomAccessCollectionWrapping.swift in Sources */,
				OBJ_184 /* RawRepresentable+AllCases.swift in Sources */,
				OBJ_185 /* RawRepresentable+Comparable.swift in Sources */,
				OBJ_186 /* RawRepresentable+Equatable.swift in Sources */,
				OBJ_187 /* RemoveElements.swift in Sources */,
				OBJ_188 /* ReplaceElements.swift in Sources */,
				OBJ_189 /* Sequence+Algebra.swift in Sources */,
				OBJ_190 /* SequenceExtensions.swift in Sources */,
				OBJ_191 /* SequenceWrapping.swift in Sources */,
				OBJ_192 /* Set+Algebra.swift in Sources */,
				OBJ_193 /* SingleTypedTree.swift in Sources */,
				OBJ_194 /* SortedArray.swift in Sources */,
				OBJ_195 /* SortedCollectionWrapping.swift in Sources */,
				OBJ_196 /* SortedDictionary.swift in Sources */,
				OBJ_197 /* Split.swift in Sources */,
				OBJ_198 /* StableSort.swift in Sources */,
				OBJ_199 /* Stack.swift in Sources */,
				OBJ_200 /* StringExtensions.swift in Sources */,
				OBJ_201 /* Subsets.swift in Sources */,
				OBJ_202 /* Swap.swift in Sources */,
				OBJ_203 /* Tree.swift in Sources */,
				OBJ_204 /* TupleMap.swift in Sources */,
				OBJ_205 /* Zip3Sequence.swift in Sources */,
				OBJ_206 /* Zipper.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_213 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_214 /* Additive.swift in Sources */,
				OBJ_215 /* AdditiveSemigroup.swift in Sources */,
				OBJ_216 /* Monoid.swift in Sources */,
				OBJ_217 /* MonoidView.swift in Sources */,
				OBJ_218 /* Multiplicative.swift in Sources */,
				OBJ_219 /* MultiplicativeSemigroup.swift in Sources */,
				OBJ_220 /* One.swift in Sources */,
				OBJ_221 /* Product.swift in Sources */,
				OBJ_222 /* Semigroup.swift in Sources */,
				OBJ_223 /* Sum.swift in Sources */,
				OBJ_224 /* Zero.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_152 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Collections::Collections" /* Collections */;
			targetProxy = 076E04E41F26A92800725508 /* PBXContainerItemProxy */;
		};
		OBJ_154 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Algebra::Algebra" /* Algebra */;
			targetProxy = 076E04E51F26A92800725508 /* PBXContainerItemProxy */;
		};
		OBJ_209 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Algebra::Algebra" /* Algebra */;
			targetProxy = 076E04E31F26A92800725508 /* PBXContainerItemProxy */;
		};
		OBJ_230 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Collections::CollectionsTests" /* CollectionsTests */;
			targetProxy = 076E04E61F26A92900725508 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_112 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Collections.xcodeproj/CollectionsTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				TARGET_NAME = CollectionsTests;
			};
			name = Debug;
		};
		OBJ_113 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Collections.xcodeproj/CollectionsTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				TARGET_NAME = CollectionsTests;
			};
			name = Release;
		};
		OBJ_157 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Collections.xcodeproj/Collections_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Collections;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Collections;
			};
			name = Debug;
		};
		OBJ_158 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Collections.xcodeproj/Collections_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Collections;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Collections;
			};
			name = Release;
		};
		OBJ_211 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Collections.xcodeproj/Algebra_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Algebra;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Algebra;
			};
			name = Debug;
		};
		OBJ_212 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Collections.xcodeproj/Algebra_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Algebra;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Algebra;
			};
			name = Release;
		};
		OBJ_228 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_229 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 3.0;
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 3.0;
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_111 /* Build configuration list for PBXNativeTarget "CollectionsTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_112 /* Debug */,
				OBJ_113 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_156 /* Build configuration list for PBXNativeTarget "Collections" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_157 /* Debug */,
				OBJ_158 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_2 /* Build configuration list for PBXProject "Collections" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_210 /* Build configuration list for PBXNativeTarget "Algebra" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_211 /* Debug */,
				OBJ_212 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_227 /* Build configuration list for PBXAggregateTarget "CollectionsPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_228 /* Debug */,
				OBJ_229 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
